{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "test_asset_table",
    "name" : "Custom Asset Table",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "latest",
      "sizeX" : 7.5,
      "sizeY" : 5.5,
      "resources" : [ {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/echarts/5.4.3/echarts.min.js"
      } ],
      "templateHtml" : "<div class=\"content-root\">\n   <div class='box-root' *ngFor=\"let datasource of datasources; let $dsIndex = index let $id='S+index'\"\n   >\n      <div class=\"css-1ja2hlt content\" *ngFor=\"let data of datasourceData[$dsIndex][0].data; let $dataIndex = index;\" \n      (click)=\"onRowClick($event, datasource)\">\n\t    <div [ngStyle]=\"{'background-color': colors[$dsIndex]}\" class=\"avatar-root avatar-circular avatar-colorDefault css-9797sx\">S{{$dsIndex + 1}}</div>\n\t        <div class=\"box-root css-s5qcc8\">\n\t\t        <div class=\"css-1rvrufc left-content\">\n\t\t\t        <div class=\"box-root css-k008qs cost\">\n\t\t\t            <ng-container *ngIf=\"datasourceData[$dsIndex][2]\">\n\t\t\t\t        <p class=\"typography-root typography-body1 css-1sr91w5\" \n\t\t\t\t            *ngFor=\"let data of datasourceData[$dsIndex][2].data; let $dataIndex = index\" >Rs {{data[1]}}</p></ng-container>\n\t\t\t        </div>\n\t\t\t        <div class=\"box-root css-k008qs statics\">\n\t\t\t        <ng-container *ngIf=\"datasourceData[$dsIndex][0]\">\n\t\t\t        <span *ngFor=\"let data of datasourceData[$dsIndex][0].data; let $dataIndex = index\" class=\"typography-root typography-caption css-m0t65p\">{{data[1]}}</span></ng-container>\n\t\t\t        \n\t\t\t        <ng-container *ngIf=\"datasourceData[$dsIndex][4]\">\n\t\t\t            <span class=\"gap\"> - </span>\n\t\t\t        <span *ngFor=\"let data of datasourceData[$dsIndex][4].data; let $dataIndex = index\" class=\"typography-root typography-caption css-m0t65p\">\n    \t\t\t        <span class='active' *ngIf= \"data[1] === 'true'\">\n            \t\t\t      Active\n            \t\t\t </span>\n            \t\t\t <span class='in-active' *ngIf= \"data[1] === 'false'\">\n            \t\t\t    In Active\n            \t\t\t </span>\n        \t\t\t </span>\n        \t\t\t </ng-container>\n        \t\t\t</div>\n\t\t        </div>\n        \t\t<div class=\"right-content css-10k7jbd\">\n        \t\t    <ng-container *ngIf=\"datasourceData[$dsIndex][1]\">\n        \t\t\t<p class=\"typography-root typography-body1 css-sv419h consumption\" \n        \t\t\t*ngFor=\"let data of datasourceData[$dsIndex][1].data; let $dataIndex = index\">{{data[1]}} KW</p></ng-container>\n        \t\t\t<ng-container *ngIf=\"datasourceData[$dsIndex][3]\">\n        \t\t\t<span *ngFor=\"let data of datasourceData[$dsIndex][3].data; let $dataIndex = index\" \n        \t\t\tclass=\"typography-root typography-caption css-m0t65p\">{{data[1]}} Meters</span></ng-container>\n        \t\t</div>\n\t    </div>\n    </div>\n </div>\n </div>",
      "templateCss" : "#container {\n    overflow: auto;\n}\n\n.content-root{\n\tpadding: 16px;\n    padding: 1.25rem;\n    padding-top: 0.5rem!important;\n}\n\n.content-root:last-of-type{\n\tpadding: 16px;\n    padding: 1.25rem;\n    padding-top: 0.5rem!important;\n}\n\n.content ,.rows{\n\tdisplay: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    width:100%;\n}\n.content{\n     margin-bottom: 1.46875rem;\n}\n\n.avatar-root{\n\t    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: center;\n    -ms-flex-pack: center;\n    -webkit-justify-content: center;\n    justify-content: center;\n    -webkit-flex-shrink: 0;\n    -ms-flex-negative: 0;\n    flex-shrink: 0;\n    width: 40px;\n    height: 40px;\n    font-family: Inter,sans-serif,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-size: 1.25rem;\n    line-height: 1;\n    border-radius: 50%;\n    overflow: hidden;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    color: #F4F5FA;\n    background-color: #BDBDBD;\n    color: rgba(58, 53, 65, 0.68);\n    background-color: #EEEEEE;\n    width: 38px;\n    height: 38px;\n    margin-right: 0.75rem;\n    font-size: 1rem;\n    color: #FFF;\n    background-color: #7CD9FE;\n\tposition: relative;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n}\n\n.box-root{\n    width: 100%;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-box-flex-wrap: wrap;\n    -webkit-flex-wrap: wrap;\n    -ms-flex-wrap: wrap;\n    flex-wrap: wrap;\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    -webkit-box-pack: justify;\n    -webkit-justify-content: space-between;\n    justify-content: space-between;\n}\n\n.left-content{\n margin-right: 0.5rem;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n}\n\n.cost{\n\tdisplay: flex;\n}\n\n.cost >p{\n\tmargin: 0;\n    font-family: Inter,sans-serif,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-weight: 400;\n    font-size: 1rem;\n    line-height: 1.5;\n    letter-spacing: 0.15px;\n    color: rgba(58, 53, 65, 0.87);\n    margin-right: 0.125rem;\n    font-weight: 600;\n    letter-spacing: 0.25px;\n}\n\n.typography-caption{\n\tmargin: 0;\n    font-family: Inter,sans-serif,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-weight: 400;\n    font-size: 0.75rem;\n    line-height: 1.66;\n    letter-spacing: 0.4px;\n    color: rgba(58, 53, 65, 0.68);\n    line-height: 1.5;\n}\n\n.consumption{\n\tmargin: 0;\n    font-family: Inter,sans-serif,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-weight: 400;\n    font-size: 1rem;\n    line-height: 1.5;\n    letter-spacing: 0.15px;\n    color: rgba(58, 53, 65, 0.87);\n    font-weight: 600;\n    font-size: 0.875rem;\n    line-height: 1.72;\n    letter-spacing: 0.22px;\n}\n\n.left-content{\n    margin-right: 0.5rem;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n}\n\n.right-content{\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    text-align: end;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n}\n\n.header-left-content{\n    margin-right: 0.5rem;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n}\n\n.header-right-content{\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    text-align: end;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n}\n\n.head{\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n}\n.count{\n        margin: 0;\n    font-family: Inter,sans-serif,-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\";\n    font-weight: 400;\n    font-size: 1rem;\n    line-height: 1.5;\n    letter-spacing: 0.15px;\n    color: rgba(58, 53, 65, 0.87);\n    margin-right: 0.125rem;\n    font-weight: 600;\n    letter-spacing: 0.25px;\n}\n\n.header-right-content{\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    text-align: end;\n    -webkit-flex-direction: column;\n    -ms-flex-direction: column;\n    flex-direction: column;\n}\n\n.statics{\n    justify-content: normal !important;\n}\n\n.active{\n    color:#56CA00;\n}\n\n.in-active{\n    color:#FF4C51;\n}\n\n.gap{\n    margin:0 0.4rem;\n}",
      "controllerScript" : "let colors = ['#7870BE', '#7CD9FE', '#A760BD', '#F871AA', '#A9A4D5'];\r\nself.onInit = function() {\r\n    self.ctx.$scope.datasources = self.ctx\r\n        .defaultSubscription.datasources;\r\n     self.ctx.$scope.dataSourcescount = \r\n     self.ctx.$scope.datasources.length;\r\n    self.ctx.$scope.data = self.ctx.defaultSubscription\r\n        .data;\r\n        self.ctx.$scope.colors = colors;\r\n\r\n    self.ctx.$scope.datasourceData = [];\r\n    var currentDatasource = null;\r\n    var currentDatasourceIndex = -1;\r\n    self.ctx.$scope.onRowClick = function($event, x){\r\n        var actionSourceId = 'rowClick';\r\n        var descriptors = self.ctx.actionsApi.getActionDescriptors(actionSourceId);\r\n        var entityId = {entityType:\"ASSET\", id:x.entityId};\r\n        var entityName = x.entityName;\r\n        self.ctx.actionsApi.handleWidgetAction($event, descriptors[0], entityId, entityName);\r\n    }\r\n    for (var i = 0; i < self.ctx.$scope.data\r\n        .length; i++) {\r\n        var dataKeyData = self.ctx.$scope.data[i];\r\n        if (dataKeyData.datasource !=\r\n            currentDatasource) {\r\n            currentDatasource = dataKeyData.datasource\r\n            currentDatasourceIndex++;\r\n            self.ctx.$scope.datasourceData[\r\n                currentDatasourceIndex] = [];\r\n\r\n        }\r\n        self.ctx.$scope.datasourceData[\r\n            currentDatasourceIndex].push(dataKeyData);\r\n    }\r\n\r\n    self.ctx.updateWidgetParams();\r\n}\r\n\r\nself.onDataUpdated = function() {\r\nvar entityRelationService = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('entityRelationService'));\r\nvar attributeService = self.ctx.$scope.$injector.get(self.ctx.servicesMap.get('attributeService'));\r\nvar attributeScope=\"SERVER_SCOPE\";\r\nlet key = \"deviceCount\"\r\nself.ctx.datasources.forEach(entity => {\r\n    if (entity.entityType === \"ASSET\") { // Without this there is an endless loop in the editor!\r\n        entityRelationService.findByFrom(entity.entity.id)\r\n            .subscribe(relations => {\r\n                var amountDevices = 0;\r\n                relations.forEach(relation => {\r\n                    amountDevices++;\r\n                });\r\n                let attributes = [{key: key, value: amountDevices}]; \r\n                let oldAttributeValue;\r\n                attributeService.getEntityAttributes(entity.entity.id, attributeScope, [key])\r\n                    .subscribe(oldAttributes => {\r\n                        if(oldAttributes[0].value != amountDevices){\r\n                            attributeService.saveEntityAttributes(entity.entity.id, attributeScope, attributes).subscribe();\r\n                        }\r\n                    });\r\n            }, e => console.log(\"No Relation\"));\r\n    }\r\n});\r\n    self.ctx.detectChanges();\r\n}\r\n\r\nself.onLatestDataUpdated = function() {\r\n    // If you need to handle latest data updates, add your logic here\r\n}\r\n\r\nself.onResize = function() {\r\n    // If you need to handle resize events, add your logic here\r\n}\r\n\r\nself.onEditModeChanged = function() {\r\n    // If you need to handle edit mode changes, add your logic here\r\n}\r\n\r\nself.onDestroy = function() {\r\n    // If you need to handle widget destruction, add your logic here\r\n}\r\n\r\nself.actionSources = function() {\r\n     return {\r\n        'rowClick': {\r\n            name: 'widget-action.row-click',\r\n            multiple: true\r\n        }\r\n    }\r\n}",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}\n",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Random\",\"color\":\"#2196f3\",\"settings\":{},\"_hash\":0.15479322438769105,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{},\"title\":\"Attributes card\",\"useDashboardTimewindow\":true,\"displayTimewindow\":true,\"actions\":{\"rowClick\":[{\"name\":\"Site\",\"icon\":\"more_horiz\",\"useShowWidgetActionFunction\":null,\"showWidgetActionFunction\":\"return true;\",\"type\":\"custom\",\"customFunction\":\"alert(entityId);\",\"openInSeparateDialog\":false,\"openInPopover\":false,\"id\":\"8db8ef70-dd0a-b1f1-98e5-7571bb3f27f6\"}]}}"
    },
    "externalId" : null,
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "f72c8f30-b11b-11ee-8373-7de626819ae0"
    },
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}