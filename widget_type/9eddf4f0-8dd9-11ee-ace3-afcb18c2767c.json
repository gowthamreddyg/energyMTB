{
  "entityType" : "WIDGET_TYPE",
  "entity" : {
    "fqn" : "sample3",
    "name" : "Custom Bar Chart",
    "deprecated" : false,
    "image" : null,
    "description" : null,
    "descriptor" : {
      "type" : "timeseries",
      "sizeX" : 8,
      "sizeY" : 5,
      "resources" : [ {
        "url" : "https://cdnjs.cloudflare.com/ajax/libs/echarts/5.4.3/echarts.min.js"
      } ],
      "templateHtml" : "<div id=\"echarts-container\" style=\"height: 400px;\"></div>\r\n",
      "templateCss" : "/* Adjust font size for ECharts legend */\r\n#echarts-container .legend {\r\n    font-size: 13px;\r\n    line-height: 10px;\r\n}\r\n\r\n/* Adjust table styling for ECharts legend */\r\n#echarts-container .legend table { \r\n    border-spacing: 0px;\r\n    border-collapse: separate;\r\n}\r\n\r\n/* Set cursor style for ECharts chart */\r\n#echarts-container {\r\n    cursor: crosshair;\r\n}\r\n",
      "controllerScript" : "self.onInit = function() {\r\n    function initECharts() {\r\n        var myChart = echarts.init(document\r\n            .getElementById('echarts-container'));\r\n        option = {\r\n        legend: {\r\n            orient: 'horizontal',\r\n    right: 10,\r\n    top: 20,\r\n    bottom: 20,\r\n          },\r\n            xAxis: {\r\n                type: 'value',\r\n                data: ['Matcha Latte', 'Milk Tea',\r\n                    'Cheese Cocoa',\r\n                    'Walnut Brownie'\r\n                ]\r\n            },\r\n            yAxis: { type:'category'},\r\n            series: [{\r\n                    type: 'bar',\r\n                    name: '2015',\r\n                    data: [89.3, 92.1, 94.4,\r\n                        85.4\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'bar',\r\n                    name: '2016',\r\n                    data: [95.8, 89.4, 91.2,\r\n                        76.9\r\n                    ]\r\n                },\r\n                {\r\n                    type: 'bar',\r\n                    name: '2017',\r\n                    data: [97.7, 83.1, 92.5,\r\n                        78.1\r\n                    ]\r\n                }\r\n            ]\r\n        };\r\n\r\n        myChart.on('click', function(params) {\r\n            timeData.push('2026-01-06');\r\n            valueData.push(50);\r\n            myChart.setOption(option);\r\n        });\r\n\r\n        setTimeout(function() {\r\n            console.log(\"myChart\", myChart)\r\n            myChart.setOption(option);\r\n        }, 100);\r\n    }\r\n\r\n    // Call the function when the ECharts library is loaded\r\n    initECharts();\r\n}\r\n\r\n// Include the necessary functions from the existing code\r\nself.onDataUpdated = function() {\r\n    // If you need to handle data updates, add your logic here\r\n}\r\n\r\nself.onLatestDataUpdated = function() {\r\n    // If you need to handle latest data updates, add your logic here\r\n}\r\n\r\nself.onResize = function() {\r\n    // If you need to handle resize events, add your logic here\r\n}\r\n\r\nself.onEditModeChanged = function() {\r\n    // If you need to handle edit mode changes, add your logic here\r\n}\r\n\r\nself.onDestroy = function() {\r\n    // If you need to handle widget destruction, add your logic here\r\n}\r\n\r\nself.typeParameters = function() {\r\n    return {\r\n        hasAdditionalLatestDataKeys: true,\r\n        defaultDataKeysFunction: function() {\r\n            return [{\r\n                name: 'temperature',\r\n                label: 'Temperature',\r\n                type: 'timeseries',\r\n                units: 'Â°C',\r\n                decimals: 0\r\n            }];\r\n        }\r\n    };\r\n}",
      "settingsSchema" : "{}",
      "dataKeySettingsSchema" : "{}",
      "latestDataKeySettingsSchema" : "{}",
      "settingsDirective" : "tb-flot-line-widget-settings",
      "dataKeySettingsDirective" : "tb-flot-line-key-settings",
      "latestDataKeySettingsDirective" : "tb-flot-latest-key-settings",
      "hasBasicMode" : true,
      "basicModeDirective" : "tb-flot-basic-config",
      "defaultConfig" : "{\"datasources\":[{\"type\":\"function\",\"name\":\"function\",\"dataKeys\":[{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"First\",\"color\":\"#2196f3\",\"settings\":{\"showLines\":true,\"fillLines\":true,\"showPoints\":false},\"_hash\":0.8587686344902596,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"},{\"name\":\"f(x)\",\"type\":\"function\",\"label\":\"Second\",\"color\":\"#ffc107\",\"settings\":{\"showLines\":true,\"fillLines\":false,\"showPoints\":false},\"_hash\":0.12775350966079668,\"funcBody\":\"var value = prevValue + Math.random() * 100 - 50;\\nvar multiplier = Math.pow(10, 2 || 0);\\nvar value = Math.round(value * multiplier) / multiplier;\\nif (value < -1000) {\\n\\tvalue = -1000;\\n} else if (value > 1000) {\\n\\tvalue = 1000;\\n}\\nreturn value;\"}]}],\"timewindow\":{\"realtime\":{\"timewindowMs\":60000}},\"showTitle\":true,\"backgroundColor\":\"#fff\",\"color\":\"rgba(0, 0, 0, 0.87)\",\"padding\":\"8px\",\"settings\":{\"stack\":false,\"fontSize\":10,\"fontColor\":\"#545454\",\"showTooltip\":true,\"tooltipIndividual\":false,\"tooltipCumulative\":false,\"hideZeros\":false,\"grid\":{\"verticalLines\":true,\"horizontalLines\":true,\"outlineWidth\":1,\"color\":\"#545454\",\"backgroundColor\":null,\"tickColor\":\"#DDDDDD\"},\"xaxis\":{\"title\":null,\"showLabels\":true,\"color\":\"#545454\"},\"yaxis\":{\"min\":null,\"max\":null,\"title\":null,\"showLabels\":true,\"color\":\"#545454\",\"tickSize\":null,\"tickDecimals\":0,\"ticksFormatter\":\"\"},\"shadowSize\":4,\"smoothLines\":false,\"comparisonEnabled\":false,\"xaxisSecond\":{\"axisPosition\":\"top\",\"title\":null,\"showLabels\":true},\"showLegend\":true,\"legendConfig\":{\"direction\":\"column\",\"position\":\"bottom\",\"sortDataKeys\":false,\"showMin\":false,\"showMax\":false,\"showAvg\":true,\"showTotal\":false,\"showLatest\":false},\"customLegendEnabled\":false},\"title\":\"Sample\",\"dropShadow\":true,\"enableFullscreen\":true,\"titleStyle\":{\"fontSize\":\"16px\",\"fontWeight\":400},\"mobileHeight\":null,\"configMode\":\"basic\",\"actions\":{},\"showTitleIcon\":false,\"titleIcon\":\"thermostat\",\"iconColor\":\"#1F6BDD\"}"
    },
    "externalId" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "9eddf4f0-8dd9-11ee-ace3-afcb18c2767c"
    },
    "id" : {
      "entityType" : "WIDGET_TYPE",
      "id" : "9eddf4f0-8dd9-11ee-ace3-afcb18c2767c"
    },
    "tags" : null
  },
  "relations" : [ ],
  "attributes" : {
    "SERVER_SCOPE" : [ ]
  }
}